<?php
/**
 * Copyright Â© 2015 Magento. All rights reserved.
 * See COPYING.txt for license details.
 */

// @codingStandardsIgnoreFile

/* @var $block \Magento\ConfigurableProduct\Block\Product\Configurable\AttributeSelector */
?>
<script>
(function(){
    'use strict';
    
    var $form;

    require([
        "jquery",
        "jquery/ui"
    ], function($){
        $form = $('#affected-attribute-set-form');

        var resetValidation = function() {
            $form.find('.messages .message.error').hide();
            $form.find('form').validation().data('validator').resetForm();
        };

        $('[data-form=edit-product]').append($('<input>', {
            type: 'hidden',
            name: 'new-variations-attribute-set-id',
            id: 'new-variations-attribute-set-id'
        }));

        $form
            .dialog({
                title: '<?php echo __('Choose Affected Product Template'); ?>',
                autoOpen: false,
                id: '<?php echo $block->getJsId() ?>',
                width: '75%',
                modal: true,
                resizable: false,
                position: {
                    my: 'left top',
                    at: 'center top',
                    of: 'body'
                },
                open: function () {
                    $(this).closest('.ui-dialog').addClass('ui-dialog-active');

                    var topMargin = $(this).closest('.ui-dialog').children('.ui-dialog-titlebar').outerHeight();
                    $(this).closest('.ui-dialog').css('margin-top', topMargin);
                },
                close: function () {
                    resetValidation();
                    $(this).closest('.ui-dialog').removeClass('ui-dialog-active');
                },
                buttons: [{
                    text: '<?php echo __('Confirm'); ?>',
                    id: '<?php echo $block->getJsId('confirm-button') ?>',
                    'class': 'action-primary',
                    click: function() {
                        if ($form.find('input[name=affected-attribute-set]:checked').val() == 'current') {
                            $('#new-variations-attribute-set-id').val($('#attribute_set_id').val());
                            $form.dialog('close')
                                .data('target').click();
                            return;
                        }

                        $form.find('.messages .message.error').hide();
                        if (!$form.find('form').validation().valid()) {
                            $form.find('input[name=new-attribute-set-name]').focus();
                            return false;
                        }

                        $.ajax({
                            type: 'POST',
                            url: '<?php echo $block->getAttributeSetCreationUrl()?>',
                            data: {
                                gotoEdit: 1,
                                attribute_set_name: $form.find('input[name=new-attribute-set-name]').val(),
                                skeleton_set: $('#attribute_set_id').val(),
                                form_key: '<?php echo $block->getFormKey()?>',
                                return_session_messages_only: 1
                            },
                            dataType: 'json',
                            showLoader: true,
                            context: $form
                        })
                            .success(function (data) {
                                if (!data.error) {
                                    $('#new-variations-attribute-set-id').val(data.id);
                                    $form.dialog('close')
                                        .data('target').click();
                                } else {
                                    $form.find('.messages .message.error').replaceWith($(data.messages).find('.message.error'));
                                }
                            });

                        return false;
                    }
                },{
                    text: '<?php echo __('Cancel'); ?>',
                    id: '<?php echo $block->getJsId('close-button') ?>',
                    'class': 'action-close',
                    click: function() {
                        $form.dialog('close');
                    }
                }]
            })
            .find('input[name=affected-attribute-set]').on('change', function() {
                $('#affected-attribute-set-new-name-container')[$(this).val() == 'new' ? 'show' : 'hide']();
                resetValidation();
                if ($(this).val() == 'new') {
                    $form.find('input[name=new-attribute-set-name]').focus();
                }
            });
    });
    
    require([
        'jquery'
    ], function ($) {

        /**
         * Retrieve list of attributes
         *
         * @return {Array}
         */
        var getAttributes = function ($node) {
            return $.map(
                $node.find('[data-role=configurable-attributes-container] [data-role=attribute-info]') || [],
                function (attribute) {
                    var $attribute = $(attribute);

                    return {
                        id: $attribute.find('[name$="[attribute_id]"]').val(),
                        code: $attribute.find('[name$="[code]"]').val(),
                        label: $attribute.find('[name$="[label]"]').val(),
                        position: $attribute.find('[name$="[position]"]').val()
                    };
                }
            );
        };

        /**
         * This fix was made in order to properly handle 'stopImmediatePropagation'.
         */
        $('#save-split-button .item').on('click', function(event) {
            if ($('#new-variations-attribute-set-id').val() != '') {
                return; // affected attribute set was already chosen
            }

            var extendingAttributes = [];

            $.each(getAttributes($('[data-role=product-variations-matrix]')), function () {
                if (!$('#attribute-' + this.code + '-container').length) {
                    extendingAttributes.push(this.id);
                }
            });
            if (!extendingAttributes.length) {
                $('#new-variations-attribute-set-id').val($('#attribute_set_id').val());
                return; // all selected configurable attributes belong to current attribute set
            }
            if (!$('[data-role=product-variations-matrix] [data-column=entity_id]')
                .closest('tr').has('input[name$="[name]"]').length
            ) {
                return; // no new simple products to save from matrix: uniting attribute set is not needed
            }

            event.stopImmediatePropagation();

            $form.data('target', event.target).dialog('open');
        });

    });

})();
</script>
